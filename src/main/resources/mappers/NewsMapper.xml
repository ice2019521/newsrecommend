<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zzuli.news.dao.NewsMapper">

    <resultMap id="BaseResultMap" type="cn.zzuli.news.entity.News">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="cate_id" jdbcType="INTEGER" property="cateId"/>
        <result column="source_id" jdbcType="INTEGER" property="sourceId"/>
        <result column="read_num" jdbcType="INTEGER" property="readNum"/>
        <result column="time" jdbcType="TIMESTAMP" property="time"/>
    </resultMap>

    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.zzuli.news.entity.News">
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, title, cate_id, source_id, read_num, time
    </sql>

    <sql id="Blob_Column_List">
        content
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from news
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from news
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="cn.zzuli.news.entity.News">
        insert into news (id, title, cate_id,
        source_id, read_num, time,
        content)
        values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{cateId,jdbcType=INTEGER},
        #{sourceId,jdbcType=INTEGER}, #{readNum,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP},
        #{content,jdbcType=LONGVARCHAR})
    </insert>

    <insert id="insertSelective" parameterType="cn.zzuli.news.entity.News">
        insert into news
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="cateId != null">
                cate_id,
            </if>
            <if test="sourceId != null">
                source_id,
            </if>
            <if test="readNum != null">
                read_num,
            </if>
            <if test="time != null">
                time,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="cateId != null">
                #{cateId,jdbcType=INTEGER},
            </if>
            <if test="sourceId != null">
                #{sourceId,jdbcType=INTEGER},
            </if>
            <if test="readNum != null">
                #{readNum,jdbcType=INTEGER},
            </if>
            <if test="time != null">
                #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="cn.zzuli.news.entity.News">
        update news
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="cateId != null">
                cate_id = #{cateId,jdbcType=INTEGER},
            </if>
            <if test="sourceId != null">
                source_id = #{sourceId,jdbcType=INTEGER},
            </if>
            <if test="readNum != null">
                read_num = #{readNum,jdbcType=INTEGER},
            </if>
            <if test="time != null">
                time = #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.zzuli.news.entity.News">
        update news
        set title = #{title,jdbcType=VARCHAR},
        cate_id = #{cateId,jdbcType=INTEGER},
        source_id = #{sourceId,jdbcType=INTEGER},
        read_num = #{readNum,jdbcType=INTEGER},
        time = #{time,jdbcType=TIMESTAMP},
        content = #{content,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="cn.zzuli.news.entity.News">
        update news
        set title = #{title,jdbcType=VARCHAR},
        cate_id = #{cateId,jdbcType=INTEGER},
        source_id = #{sourceId,jdbcType=INTEGER},
        read_num = #{readNum,jdbcType=INTEGER},
        time = #{time,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>

</mapper>